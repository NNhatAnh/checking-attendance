#include <Arduino.h>
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"

#define LED_BUILTIN 12  // First LED
#define LED_SECOND 14   // Second LED (adjust pin as needed)

// Task handles
TaskHandle_t LED1TaskHandle = NULL;
TaskHandle_t LED2TaskHandle = NULL;

// Task for controlling the first LED
void LED1Task(void *pvParameters) {
  while (1) {
    digitalWrite(LED_BUILTIN, HIGH);
    Serial.println("LED 1 ON");
    vTaskDelay(1000 / portTICK_PERIOD_MS);
    digitalWrite(LED_BUILTIN, LOW);
    Serial.println("LED 1 OFF");
    vTaskDelay(1000 / portTICK_PERIOD_MS);
  }
}

// Task for controlling the second LED
void LED2Task(void *pvParameters) {
  while (1) {
    digitalWrite(LED_SECOND, HIGH);
    Serial.println("LED 2 ON");
    vTaskDelay(500 / portTICK_PERIOD_MS);  // Different timing for demonstration
    digitalWrite(LED_SECOND, LOW);
    Serial.println("LED 2 OFF");
    vTaskDelay(1500 / portTICK_PERIOD_MS);
  }
}

void setup() {
  // Initialize LED pins
  pinMode(LED_BUILTIN, OUTPUT);
  pinMode(LED_SECOND, OUTPUT);
  
  // Initialize serial communication
  Serial.begin(921600);
  Serial.println("Starting multitasking LED demo");
  
  // Create tasks
  xTaskCreate(
    LED1Task,          // Function that implements the task
    "LED1Task",        // Task name
    2048,              // Stack size (bytes)
    NULL,              // Parameter to pass
    1,                 // Task priority
    &LED1TaskHandle    // Task handle
  );
  
  xTaskCreate(
    LED2Task,          // Function that implements the task
    "LED2Task",        // Task name
    2048,              // Stack size (bytes)
    NULL,              // Parameter to pass
    1,                 // Task priority
    &LED2TaskHandle    // Task handle
  );
}

void loop() {
  // Empty as tasks handle the work now
  vTaskDelay(1000 / portTICK_PERIOD_MS);
}